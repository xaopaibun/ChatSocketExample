{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","constants/index.js","utils/until.js","services/api.js","redux/actions/authenAction.js","redux/saga/authen.js","redux/actions/productAction.js","redux/saga/product.js","redux/saga/rootsaga.js","containers/chat/index.js","assets/svg/facebooksvg.js","components/loginFB/index.js","assets/svg/googlesvg.js","components/loginGoogle/index.js","assets/svg/mailsvg.js","containers/forgot/index.js","components/welcome/index.js","assets/svg/locksvg.js","assets/svg/eyesvg.js","assets/svg/eyeactivesvg.js","containers/signin/index.js","containers/signup/index.js","containers/verifyOTP/index.js","containers/updateUser.js/index.js","containers/chatEx/index.js","router/index.js","redux/reducers/authenReducer.js","redux/reducers/productReducers.js","redux/reducers/index.js","redux/store/configstore.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HomeType","AuthenType","Url_SeverLocal","SetToken","sessionStorage","getItem","accessToken","setItem","HandleNumTime","num","toString","HandleTime","epoch","d","Date","parseInt","getFullYear","getMonth","getDate","getHours","getMinutes","instance","axios","create","baseURL","timeout","headers","Accept","instanceLocal","instanceMiddleware","Authorization","loginAdmin","prams","post","getdata","get","findUser","params","LOGIN_ERROR","e","type","payload","apiSideEffectLoginAdmin","apiLoginAdminSaga","take","admin","call","result","put","token","data","takeLatest","apiSideEffectTestProduct","apiProductSaga","action","rootSaga","all","Chat","require","socketRef","React","useRef","useState","setMess","setId","settemp","key","setKey","setShow","name","useSelector","state","AuthenReducer","image","useEffect","current","socketIOClient","connect","emit","on","dataGot","user","setTimeout","disconnect","className","onChange","val","target","value","id","placeholder","onClick","username","res","console","log","FbSvg","viewBox","width","height","fill","LoginFB","dispatch","useDispatch","history","useHistory","appId","autoLoad","fields","cssClass","icon","textButton","callback","response","FB","picture","url","push","catch","error","GoogleSvg","LoginGoogle","role","MailSvg","focusable","style","color","Forgot","formik","useFormik","initialValues","validationSchema","Yup","required","onSubmit","valuesinput","paddingLeft","paddingRight","textAlign","src","fontWeight","fontSize","handleSubmit","values","handleChange","errors","Welcome","props","alt","img","lineHeight","href","LockSvg","EgeSvg","EgeActiveSvg","SignIn","isshow","setisshow","refEmail","errorlogin","refPassword","gmail","password","email","min","a","status","alert","overflow","to","ref","SignUp","isshowConfirm","setisshowConfirm","confirmpassword","oneOf","accessTokenVerifyOTP","VerifyOTP","OTP","setOTP","display","justifyContent","alignItems","numInputs","containerStyle","inputStyle","separator","margin","tokenOTP","message","err","UpdateUser","setImage","phone","address","gender","avatar","onChangeFile","evt","preventDefault","FormData","formData","append","files","config","fileNameInServer","encType","borderRadius","ChatEx","mess","setMessage","typing","setTyping","frameBorder","allowFullScreen","allow","map","index","socketID","slice","createAt","content","onBlur","onFocus","msg","send","RouterApp","path","initialState","isloading","rootReducer","combineReducers","productReducer","Product","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","run"],"mappings":"kSAAe,I,aCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iCCDDQ,EACU,oBADVA,EAES,mBAFTA,EAGI,cAHJA,EAIY,sBAJZA,EAKY,sBAGZC,EACO,gBADPA,EAEI,cAFJA,EAGE,YAHFA,EAIO,iBAJPA,EAKI,cALJA,EAMQ,iBANRA,EAOK,c,iBCpBLC,EAAiB,wBAIjBC,GAFeC,eAAeC,QAAQ,eAE3B,SAACC,GACrBF,eAAeG,QAAQ,cAAeD,KAc7BE,EAAgB,SAACC,GAQ1B,OANIA,EAAM,GAAKA,EAAM,GACR,IAAMA,EAAIC,WAGVD,EAAIC,YAKRC,EAAa,SAACC,GACvB,IAAIC,EAAI,IAAIC,KAAKC,SAASH,IAE1B,OADeC,EAAEG,cAAgB,IAAMR,EAAcK,EAAEI,WAAa,GAAK,IAAMT,EAAcK,EAAEK,WAAa,IAAMV,EAAcK,EAAEM,YAAc,IAAMX,EAAcK,EAAEO,eC9BpKC,EAAWC,IAAMC,OAAO,CAC5BC,QDJuB,0CCKvBC,QAAS,KACTC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAIdC,EAAgBN,IAAMC,OAAO,CACjCC,QAAStB,EACTuB,QAAS,KACTC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAKdE,EAAqBP,IAAMC,OAAO,CACtCC,QAAStB,EACTuB,QAAS,KACTC,QAAS,CACPI,cAAc,UAAD,ODjBa1B,eAAeC,QAAQ,gBCkBjDsB,OAAQ,mBACR,eAAgB,sBAQPI,EAAa,SAACC,GAAD,OAAWX,EAASY,KAAK,mBAAoBD,IAG1DE,EAAU,kBAAMb,EAASc,IAAI,gBAE7BC,EAAW,SAACC,GAAD,OAAYT,EAAcK,KAAK,YAAaI,ICjBvDC,EAAc,SAACC,GACxB,MAAO,CACHC,KAAMvC,EACNwC,QAAUF,I,WCpBDG,G,WAYAC,GAZV,SAAUD,IAAV,yEACW,OADX,SACiBE,YAAK3C,GADtB,OAGgB,OAFb4C,EADH,yBAGsBC,YAAKf,EAAYc,EAAMJ,SAH7C,OAIC,OADMM,EAHP,gBAIOC,YDsBH,CACHR,KAAMvC,IC3BP,OAKC,OALD,UAKO+C,aD0BaC,EC1BCF,EAAOG,KAAK5C,YD2B7B,CACHkC,KAAKvC,EACLwC,QAAUQ,KClCX,QAMC,OAND,UAMOH,YAAK3C,EAAU4C,EAAOG,KAAK5C,aANlC,gCAQC,OARD,oCAQO0C,YAAIV,EAAY,EAAD,KARtB,kCD+BmB,IAACW,IC/BpB,iBAYA,SAAUN,IAAV,iEACH,OADG,SACGQ,YAAWlD,EAAwByC,GADtC,uCCjBA,I,WCGUU,G,WAWAC,GAXV,SAAUD,EAAyBE,GAAnC,uEAEC,OAFD,kBAEON,YDgBH,CACHR,KAAMxC,ICnBP,OAGc,OAHd,SAGoB8C,YAAKZ,GAHzB,OAIC,OADMgB,EAHP,gBAIOF,YDNH,CACHR,KAAMxC,EACNyC,QCIsBS,IAJvB,OAKC,OALD,UAKOF,YDmBH,CACHR,KAAMxC,ICzBP,gCAOC,OAPD,oCAOOgD,aDHmBT,ECGE,EAAD,GDFvB,CACHC,KAAMxC,EACNyC,QAASF,KCPV,kCDIyB,IAACA,ICJ1B,iBAWA,SAAUc,IAAV,iEACH,OADG,SACGF,YAAWnD,EAA4BoD,GAD1C,uC,eCZkBG,GAAV,SAAUA,IAAV,iEACX,OADW,SACLC,YAAI,CACNb,IACAU,MAHO,uC,2DCqKAI,GAlJJC,EAAQ,IAEN,WACT,IAAMC,EAAYC,IAAMC,SACxB,EAAwBC,mBAAS,IAAjC,mBAAaC,GAAb,WACA,EAA8BD,mBAAS,IAAvC,mBACA,GADA,UACoBA,sBAApB,mBAAWE,GAAX,WACA,EAAwBF,qBAAxB,mBAAaG,GAAb,WACA,EAAgCH,mBAAS,IAAzC,mBACA,GADA,UACsBA,sBAAtB,mBAAOI,EAAP,KAAYC,EAAZ,KACA,EAAwBL,oBAAS,GAAjC,mBAAaM,GAAb,WACMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcH,QACxCC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,SACvDb,IAAMc,WAAU,WAqBZ,OApBAf,EAAUgB,QAAUC,IAAeC,QAAQ,yBAE3ClB,EAAUgB,QAAQG,KAAK,WAAYT,GAEnCV,EAAUgB,QAAQI,GAAG,UAAU,SAAA7B,GAC3Bc,EAAMd,MAGVS,EAAUgB,QAAQI,GAAG,kBAAkB,SAAAC,GACnCjB,EAAQiB,MAGZrB,EAAUgB,QAAQI,GAAG,sBAAsB,SAAAE,GACvChB,EAAQgB,GACRb,GAAQ,GACRc,YAAW,WACPd,GAAQ,KACT,QAGA,WACHT,EAAUgB,QAAQQ,gBAEvB,IACctB,mBAiCjB,OACI,8BACI,qBAAKuB,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBAAO5C,KAAK,OACR4C,UAAU,eAAeC,SAAU,SAACC,GAAD,OAASnB,EAAOmB,EAAIC,OAAOC,QAAQnB,KAAK,UAAUoB,GAAG,GAAG,mBAAiB,SAASC,YAAY,kBACrI,wBAAQlD,KAAK,SAASmD,QAAS,WAR3CvD,EAAS,CAAEwD,SAAU1B,IAAOxE,MAAK,SAAAmG,GAAG,OAAIC,QAAQC,IAAIF,EAAI3C,KAAKA,UAQEkC,UAAU,kBAA7D,sC,SCrFLY,GAfD,WACV,OACI,qBAAKC,QAAQ,gBAAgBC,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAA3D,SACI,8BACI,sBAAMA,KAAK,UAAUvF,EAAE,2LAEvB,sBAAMuF,KAAK,UAAUvF,EAAE,sPAGvB,sBAAMuF,KAAK,UAAUvF,EAAE,gO,qBC4BxBwF,GA9BC,WACd,IAAMC,EAAWC,cACXC,EAAUC,uBAehB,OAEE,cAAC,KAAD,CACEC,MAAM,kBACNC,UAAU,EACVC,OAAO,qBACPC,SAAS,UACTC,KAAM,cAAC,GAAD,IACNC,WAAW,YACXC,SAvBqB,SAACC,GACxB3F,IAAMW,KAAK,gCAAiC,CAACiF,GAAID,IAC9CvH,MAAK,SAAUmG,GPkCS,IAACpD,EOjCxB6D,GPiCwB7D,EOjCA,CAAE4B,KAAM4C,EAAS5C,KAAMI,MAAOwC,EAASE,QAAQjE,KAAKkE,KPkCzE,CACH5E,KAAMvC,EACNwC,QAAUA,KOnCV+D,EAAQa,KAAK,SACblH,EAAS8G,EAAS3G,gBAEnBgH,OAAM,SAAUC,GAEfzB,QAAQC,IAAIwB,UCkBLC,GArCG,WACd,OACI,qBAAKvB,QAAQ,gBAAgBC,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAA3D,SACI,8BACI,sBAAMA,KAAK,UAAUvF,EAAE,kQAGvB,sBAAMuF,KAAK,UAAUvF,EAAE,yJAEvB,mBAAG4E,GAAG,oBAAN,SACI,4BACI,4BACI,4BACI,sBAAMW,KAAK,UAAUvF,EAAE,6PAOvC,sBAAMuF,KAAK,UAAUvF,EAAE,mUAGmD,sBAAMuF,KAAK,UAAUvF,EAAE,qOAGjG,sBAAMuF,KAAK,UAAUvF,EAAE,0WAGwF,sBAAMuF,KAAK,UAAUvF,EAAE,2PCnBvI4G,GARK,WAChB,OACI,yBAAQjF,KAAK,SAAS4C,UAAU,eAAhC,UACI,uBAAMsC,KAAK,MAAMtC,UAAU,UAA3B,cAAsC,cAAC,GAAD,IAAtC,OACA,sBAAMA,UAAU,OAAhB,wB,SCCGuC,GAPC,WACZ,OACI,qBAAK1B,QAAQ,gBAAgB2B,UAAU,QAAQxC,UAAU,aAAa,YAAU,OAAOc,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAAe,cAAY,OAAhJ,SACI,sBAAOyB,MAAO,CAACC,MAAM,WAAYjH,EAAE,wV,kBCyEhCkH,GA/DA,WACX,IAAMzB,EAAWC,cACXC,EAAUC,uBACVuB,EAASC,aAAU,CACrBC,cAAe,CACX7D,KAAM,IAEV8D,iBAAkBC,KAAW,CACzB/D,KAAM+D,OACDC,SAAS,8BAElBC,SAAU,SAACC,GX6BO,IAAC9F,EW3Bf6D,GX2Be7D,EW3BM8F,EAAYlE,KX4BlC,CACH7B,KAAMvC,EACNwC,QAAUA,KW7BN+D,EAAQa,KAAK,cAGrB,OACI,8BACI,qBAAKjC,UAAU,WAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAYyC,MAAO,CAAEW,YAAa,GAAIC,aAAc,IAAnE,UACI,qBAAKrD,UAAU,cACf,sBAAKA,UAAU,aAAf,UACI,sBAAKyC,MAAO,CAAEa,UAAW,UAAzB,UACI,qBAAKC,IAAI,4CAA4CxC,OAAQ,GAAID,MAAO,MAExE,oBAAI2B,MAAO,CAAEe,WAAY,MAAOC,SAAU,QAA1C,8BACA,qBAAKzD,UAAU,gBAInB,uBAAMkD,SAAUN,EAAOc,aAAvB,UACI,sBAAK1D,UAAU,YAAf,UACI,oCAAOA,UAAU,cAAcf,KAAK,OAAO7B,KAAK,OAC5CgD,MAAOwC,EAAOe,OAAO1E,KACrBgB,SAAU2C,EAAOgB,aAAcvD,GAAG,mBAAmBC,YAAY,QAFrE,YAEsF,cACtF,sBAAMN,UAAU,eAAhB,SACI,cAAC,GAAD,SAGR,qBAAKA,UAAU,aACf,qBAAKA,UAAU,YAAf,SACK4C,EAAOiB,OAAO5E,MACX,sBAAMe,UAAU,WAAhB,SAA6B4C,EAAOiB,OAAO5E,SAGnD,qBAAKe,UAAU,aACf,wBAAQ5C,KAAK,SAAS4C,UAAU,wCAAhC,SACI,sBAAMK,GAAG,UAAT,oC,SClCrByD,I,cA3BC,SAACC,GAEb,OACI,8BACI,8BACI,sBAAK/D,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKc,MAAM,QAAQyC,IAAI,kDAAkDS,IAAI,OAEjF,qBAAKhE,UAAU,cAAf,SACI,qBAAKA,UAAU,WAAWuD,IAAKQ,EAAME,IAAKD,IAAI,OAElD,sBAAKhE,UAAU,iBAAf,UACI,oBAAIA,UAAU,+BAAd,+BACA,mBAAGA,UAAU,aAAayC,MAAO,CAAEyB,WAAY,OAA/C,mJAGJ,sBAAKlE,UAAU,iBAAf,UACI,mBAAGA,UAAU,aAAamE,KAAK,KAA/B,+BACA,sBAAMnE,UAAU,kBAAhB,iBACA,mBAAGA,UAAU,aAAamE,KAAK,KAA/B,0CCdTC,GAPC,WACZ,OACI,qBAAKvD,QAAQ,gBAAgB2B,UAAU,QAAQxC,UAAU,aAAa,YAAU,OAAOc,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAAe,cAAY,OAAhJ,SACI,sBAAMyB,MAAO,CAACC,MAAM,WAAYjH,EAAE,4VCE/B4I,GALA,WACX,OACI,sBAAM5I,EAAE,mqBCGD6I,GALM,WACjB,OACI,sBAAMjE,GAAG,MAAM5E,EAAE,meC2KV8I,GArJA,WAGX,MAA4B7F,oBAAS,GAArC,mBAAO8F,EAAP,KAAeC,EAAf,KAIMC,GAFQxF,aAAY,SAAAC,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,qBAAX,aAAI,EAAsBvB,SAC3CqB,aAAY,SAAAC,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,qBAAX,aAAI,EAAsBuF,cACxClG,iBAAO,WAClBmG,EAAcnG,iBAAO,UAErB2C,EAAUC,uBAGVuB,GAFWzB,cAEF0B,aAAU,CACrBC,cAAe,CACX+B,MAAO,GACPC,SAAU,IAEd/B,iBAAkBC,KAAW,CACzB6B,MAAO7B,OACF+B,MAAM,kCACN9B,SAAS,mCACd6B,SAAU9B,OACLgC,IAAI,EAAG,wBACP/B,SAAS,gCAGlBC,SAAS,WAAD,6BAAE,WAAOC,GAAP,SAAA8B,EAAA,uDjBJQrI,EiBKJuG,EjBLc3G,EAAcK,KAAK,SAAUD,IiBK9BtC,MAAK,SAAAmG,GACP,KAAdA,EAAIyE,QACHC,MAAM,oBACNpK,EAAS0F,EAAI3C,KAAK5C,aAClBkG,EAAQa,KAAK,UAEK,KAAdxB,EAAIyE,OACRC,MAAM,iCAGNA,MAAM,mCAGXjD,OAAM,SAAA/E,GACLgI,MAAM,qBACNjI,EAAYC,MAhBV,iCjBJO,IAACP,IiBIR,OAAF,mDAAC,MAsBb,OACI,qBAAK6F,MAAO,CAAE1B,OAAQ,QAASqE,SAAU,SAAU1C,MAAO,WAA1D,SACI,8BACI,sBAAK1C,UAAU,MAAf,UACI,qBAAKA,UAAU,6CAAf,SACI,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,cAAd,sBACA,qBAAKA,UAAU,aACf,oBAAGyC,MAAO,CAAEC,MAAO,WAAnB,wCAA2D,cAAC,IAAD,CAAM2C,GAAG,UAAT,wBAC3D,qBAAKrF,UAAU,cACf,qBAAKA,UAAU,cACf,uBAAMkD,SAAUN,EAAOc,aAAvB,UACI,sBAAK1D,UAAU,aAAf,UAEI,uBAAOA,UAAU,cAAjB,mBAA6C,qBAAKA,UAAU,aAC5D,sBAAKA,UAAU,YAAf,UACI,uBACIsF,IAAKZ,EACLtH,KAAK,QACL6B,KAAK,QACLe,UAAY4C,EAAOiB,OAAOgB,MAAsB,kBAAd,YAElCzE,MAAOwC,EAAOe,OAAOkB,MACrB5E,SAAU2C,EAAOgB,eAEpBhB,EAAOiB,OAAOgB,OACX,mBAAG7E,UAAU,WAAb,SAA0B4C,EAAOiB,OAAOgB,QAE5C,sBAAM7E,UAAU,eAAhB,SACI,cAAC,GAAD,YAIZ,qBAAKA,UAAU,cACf,sBAAKA,UAAU,aAAf,UAEI,uBAAOA,UAAU,cAAjB,sBAAgD,qBAAKA,UAAU,aAC/D,sBAAKA,UAAU,YAAf,UACI,uBACIsF,IAAKV,EACL3F,KAAK,WACL7B,KAAMoH,EAAS,OAAS,WACxBxE,UAAY4C,EAAOiB,OAAOiB,SAAyB,kBAAd,YACrC1E,MAAOwC,EAAOe,OAAOmB,SACrB7E,SAAU2C,EAAOgB,eAEpBhB,EAAOiB,OAAOiB,UACX,mBAAG9E,UAAU,WAAb,SAA0B4C,EAAOiB,OAAOiB,WAE5C,sBAAM9E,UAAU,eAAhB,SACI,cAAC,GAAD,MAEJ,qBAAKO,QAAS,kBAAMkE,GAAWD,IAAS3D,QAAQ,gBAAgBb,UAAU,gBAAgBwC,UAAU,QAAQ,YAAU,gBAAgB1B,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAAe,cAAY,OAA/L,SACMwD,EACI,cAAC,GAAD,IADK,cAAC,GAAD,YAMvB,qBAAKxE,UAAU,cAEf,wBAAQ5C,KAAK,SAAS4C,UAAU,wCAAhC,SACI,sBAAMK,GAAG,UAAT,0BAIR,qBAAKL,UAAU,cACf,qBAAKA,UAAU,cAEf,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,mDAAf,SACI,qBAAKA,UAAU,cAEnB,qBAAKA,UAAU,4CAAf,SACI,mBAAGA,UAAU,UAAb,+BAEJ,qBAAKA,UAAU,mDAAf,SACI,qBAAKA,UAAU,mBAK3B,sBAAKA,UAAU,gCAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,cAMhB,qBAAKA,UAAU,kDAAf,SACI,cAAC,GAAD,CAASiE,IAAI,iE,SCdtBsB,GAxIA,WACX,MAA4B7G,oBAAS,GAArC,mBAAO8F,EAAP,KAAeC,EAAf,KACA,EAA0C/F,oBAAS,GAAnD,mBAAO8G,EAAP,KAAsBC,EAAtB,KACMrE,EAAUC,wBACVuB,EAASC,aAAU,CACrBC,cAAe,CACX+B,MAAO,GACPC,SAAU,GACVY,gBAAiB,IAErB3C,iBAAkBC,KAAW,CACzB6B,MAAO7B,OACF+B,MAAM,kCACN9B,SAAS,mCACd6B,SAAU9B,OACLgC,IAAI,EAAG,wBACP/B,SAAS,8BACdyC,gBAAiB1C,OACZ2C,MAAM,CAAC3C,KAAQ,YAAa,MAAO,wBACnCC,SAAS,gCAGlBC,SAAU,SAAAS,GlBQI,IAAC/G,KkBPJ+G,ElBOcnH,EAAcK,KAAK,UAAWD,IkBPpCtC,MAAK,SAAAmG,GnB1BC,IAACmF,EmB2BD,KAAdnF,EAAIyE,QACHC,MAAM,6DACN/D,EAAQa,KAAK,cnB7BC2D,EmB8BInF,EAAI3C,KAAK5C,YnB7B3CF,eAAeG,QAAQ,YAAayK,ImBgCpBT,MAAM,8CAGXjD,OAAM,SAAC/E,GAAD,OAAOuD,QAAQC,IAAIxD,SAIpC,OACI,qBAAKsF,MAAO,CAAE1B,OAAQ,QAASqE,SAAU,SAAU1C,MAAO,WAA1D,SACI,sBAAK1C,UAAU,MAAf,UACI,qBAAKA,UAAU,6CAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,gCACI,oBAAIA,UAAU,cAAd,qBACA,qBAAKA,UAAU,aACf,oBAAGyC,MAAO,CAAEC,MAAO,WAAnB,uCAA0D,cAAC,IAAD,CAAM2C,GAAG,UAAT,wBAC1D,qBAAKrF,UAAU,cACf,qBAAKA,UAAU,cACf,uBAAMkD,SAAUN,EAAOc,aAAvB,UACI,sBAAK1D,UAAU,aAAf,UAEI,uBAAOA,UAAU,cAAjB,mBAA6C,qBAAKA,UAAU,aAC5D,sBAAKA,UAAU,YAAf,UACI,uBACI5C,KAAK,QACL6B,KAAK,QACLe,UAAY4C,EAAOiB,OAAOkB,MAAsB,kBAAd,YAClC3E,MAAOwC,EAAOe,OAAOkB,MACrB5E,SAAU2C,EAAOgB,eAEpBhB,EAAOiB,OAAOgB,OACX,mBAAG7E,UAAU,WAAb,SAAyB4C,EAAOiB,OAAOgB,QAG3C,cAAC,GAAD,UAGR,qBAAK7E,UAAU,cAEf,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,sBAAgD,qBAAKA,UAAU,aAC/D,sBAAKA,UAAU,YAAf,UACI,uBACIf,KAAK,WACL7B,KAAMoH,EAAS,OAAS,WACxBxE,UAAY4C,EAAOiB,OAAOiB,SAAyB,kBAAd,YACrC1E,MAAOwC,EAAOe,OAAOmB,SACrB7E,SAAU2C,EAAOgB,eAEpBhB,EAAOiB,OAAOiB,UACX,mBAAG9E,UAAU,WAAb,SAAyB4C,EAAOiB,OAAOiB,WAE3C,sBAAM9E,UAAU,eAAhB,SACI,cAAC,GAAD,MAEJ,qBAAKO,QAAS,kBAAMkE,GAAWD,IAAS3D,QAAQ,gBAAgBb,UAAU,gBAAgBwC,UAAU,QAAQ,YAAU,gBAAgB1B,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAAe,cAAY,OAA/L,SACMwD,EACI,cAAC,GAAD,IADK,cAAC,GAAD,YAKvB,qBAAKxE,UAAU,cAEf,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,6BAAuD,qBAAKA,UAAU,aACtE,sBAAKA,UAAU,YAAf,UACI,uBACIf,KAAK,kBACL7B,KAAMoI,EAAgB,OAAS,WAC/BxF,UAAU,YAEVI,MAAOwC,EAAOe,OAAO+B,gBACrBzF,SAAU2C,EAAOgB,eAEpBhB,EAAOiB,OAAO6B,iBACX,mBAAG1F,UAAU,WAAb,SAAyB4C,EAAOiB,OAAO6B,kBAE3C,sBAAM1F,UAAU,eAAhB,SACI,cAAC,GAAD,MAEJ,qBAAKO,QAAS,kBAAMkF,GAAkBD,IAAgB3E,QAAQ,gBAAgBb,UAAU,gBAAgBwC,UAAU,QAAQ,YAAU,gBAAgB1B,MAAM,MAAMC,OAAO,MAAMC,KAAK,eAAe,cAAY,OAA7M,SACMwE,EACI,cAAC,GAAD,IADY,cAAC,GAAD,YAM9B,qBAAKxF,UAAU,cAEf,wBAAQ5C,KAAK,SAAS4C,UAAU,wCAAhC,SACI,sBAAMK,GAAG,UAAT,qCAOxB,qBAAKL,UAAU,kDAAf,SACI,cAAC,GAAD,CAASiE,IAAI,+D,8BCvGlB4B,GAnCG,WACd,MAAsBnH,mBAAS,GAA/B,mBAAOoH,EAAP,KAAYC,EAAZ,KACM3E,EAAUC,wBAChB,OACI,qBAAKoB,MAAO,CAAE3B,MAAO,OAAQC,OAAQ,QAASiF,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAArG,SACI,sBAAKzD,MAAO,CAAE1B,OAAQ,QAASD,MAAO,SAAtC,UACI,oBAAI2B,MAAO,CAAEa,UAAW,UAAxB,wDACA,cAAC,KAAD,CACIlD,MAAO0F,EACP7F,SAAU,SAACC,GAAD,OAAS6F,EAAO7F,IAC1BiG,UAAW,EAAGC,eAAgB,CAAEH,eAAgB,eAAgBC,WAAY,UAC5EG,WAAY,CAAEvF,MAAO,OAAQC,OAAQ,QACrCuF,UAAW,uCAEf,qBAAK7D,MAAO,CAAE1B,OAAQ,UACtB,qBAAK0B,MAAO,CAAE3B,MAAO,MAAOyF,OAAQ,QAApC,SACI,wBAAQnJ,KAAK,SAASmD,QAAS,kBnBoBrBtD,EmBnBQ,CAAC6I,IAAMnK,SAASmK,GAAMU,SpBNrBxL,eAAeC,QAAQ,cCyBrBuB,EAAcoB,IAAI,YAAaX,ImBlB/C3C,MAAK,SAAAmG,GACe,KAAdA,EAAIyE,QACHC,MAAM1E,EAAI3C,KAAK2I,SACfrF,EAAQa,KAAK,WAEK,KAAdxB,EAAIyE,QACRC,MAAM1E,EAAI3C,KAAK2I,YAGtBvE,OAAM,SAAAwE,GAAG,OAAIhG,QAAQC,IAAI+F,MnBSrB,IAACzJ,GmBRR+C,UAAU,yBAZZ,sC,SCwIL2G,GAxJI,WACf,MAA0BnI,IAAME,SAAS,IAAzC,mBAAOW,EAAP,KAAcuH,EAAd,KAEMhE,EAASC,aAAU,CACrBC,cAAe,CACXtC,SAAU,GACVqG,MAAO,GACPC,QAAS,GACTC,OAAQ,IAEZhE,iBAAkBC,KAAW,CACzBxC,SAAUwC,OACLC,SAAS,iCACd4D,MAAO7D,OACFC,SAAS,6BACd6D,QAAS9D,OACJC,SAAS,+BACd8D,OAAQ/D,OACHC,SAAS,gCAElBC,SAAU,SAACS,GpBsBW,IAAC1G,EoBrBhBoC,IpBqBgBpC,EoBpBA,6BAAI0G,GAAL,IAAaqD,OAAS3H,IpBoBV5C,EAAmBmB,IAAI,cAAeX,IoBnBhE3C,MAAK,SAAAmG,GACgB,KAAdA,EAAIyE,OACHC,MAAM,iCAGNA,MAAM,yDAEXjD,OAAM,SAAAwE,GAAG,OAAGhG,QAAQC,IAAI+F,SAMjCO,EAAY,wCAAG,WAAOC,GAAP,iBAAAjC,EAAA,6DACjBiC,EAAIC,iBADa,SAEM,IAAIC,SAFV,cAEXC,EAFW,QAGRC,OAAO,SAAUJ,EAAI/G,OAAOoH,MAAM,IAH1B,SAII,CACjBjL,QAAS,CACL,eAAgB,wBANP,cAIXkL,EAJW,iBASXtL,IAAMW,KAAK/B,EAAiB,gBAAiBuM,EAAUG,GAAQlN,MAAK,SAAAmG,GACtEmG,EAASnG,EAAI3C,KAAK2J,qBAVL,4CAAH,sDAclB,OACI,sBAAKzH,UAAU,YAAf,UACI,qBAAKA,UAAU,cACf,4DACA,uBAAMkD,SAAUN,EAAOc,aAAcgE,QAAQ,sBAA7C,UACI,sBAAK1H,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,oBAA8C,qBAAKA,UAAU,aAE7D,uBACIf,KAAK,SACL7B,KAAK,OACL4C,UAAU,YACVC,SAAU,SAACiH,GAAD,OAASD,EAAaC,MAGpC,qBAAKlH,UAAU,aAED,KAAVX,EACI,qBAAKoD,MAAO,CAAE3B,MAAO,QAASC,OAAQ,QAASwF,OAAS,QAAxD,SACI,qBAAK9D,MAAO,CAAE3B,MAAO,OAAQC,OAAQ,OAAQ4G,aAAc,OAASpE,IAAK,yBAA2BlE,MAC/F,wBAGjB,qBAAKW,UAAU,iBAGnB,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,uBAAiD,qBAAKA,UAAU,aAChE,qBAAKA,UAAU,YAAf,SACI,uBACIf,KAAK,WACL7B,KAAK,OACL4C,UAAU,YACVI,MAAOwC,EAAOe,OAAOnD,SACrBP,SAAU2C,EAAOgB,iBAMzB,qBAAK5D,UAAU,iBAGnB,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,mBAA4C,qBAAKA,UAAU,aAC3D,qBAAKA,UAAU,YAAf,SACI,uBACIf,KAAK,QACL7B,KAAK,OACL4C,UAAU,YACVI,MAAOwC,EAAOe,OAAOkD,MACrB5G,SAAU2C,EAAOgB,iBAOzB,qBAAK5D,UAAU,iBAGnB,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,qBAA+C,qBAAKA,UAAU,aAC9D,qBAAKA,UAAU,YAAf,SACI,uBACIf,KAAK,UACL7B,KAAK,OACL4C,UAAU,YACVI,MAAOwC,EAAOe,OAAOmD,QACrB7G,SAAU2C,EAAOgB,iBAMzB,qBAAK5D,UAAU,iBAGnB,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,oBAA6C,qBAAKA,UAAU,aAC5D,qBAAKA,UAAU,YAAf,SACI,uBACIf,KAAK,SACL7B,KAAK,OACL4C,UAAU,YACVI,MAAOwC,EAAOe,OAAOoD,OACrB9G,SAAU2C,EAAOgB,iBAMzB,qBAAK5D,UAAU,iBAEnB,wBAAQ5C,KAAK,SAAS4C,UAAU,wCAAhC,SACI,sBAAMK,GAAG,UAAT,sBAEJ,qBAAKL,UAAU,qBCfhB4H,I,OApIA,WACX,IAAMrJ,EAAYC,IAAMC,SACxB,EAAwBC,mBAAS,IAAjC,mBAAOmJ,EAAP,KAAalJ,EAAb,KACA,EAA8BD,mBAAS,IAAvC,mBAAO+H,EAAP,KAAgBqB,EAAhB,KACA,EAAoBpJ,qBAApB,mBAAO2B,EAAP,KAAWzB,EAAX,KACA,EAAwBF,qBAAxB,mBAAaG,GAAb,WACA,EAAgCH,mBAAS,IAAzC,mBACA,GADA,UACsBA,sBAAtB,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBAAaM,GAAb,WAEA,EAA4BN,mBAAS,IAArC,mBAAOqJ,EAAP,KAAeC,EAAf,KAEM/I,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcH,QACtDT,IAAMc,WAAU,WA8BZ,OA7BAf,EAAUgB,QAAUC,IAAeC,QAAQ,yBAE3ClB,EAAUgB,QAAQG,KAAK,WAAYT,GAEnCV,EAAUgB,QAAQI,GAAG,UAAU,SAAA7B,GAC3Bc,EAAMd,MAGVS,EAAUgB,QAAQI,GAAG,YAAY,SAAA7B,GAE7BkK,EAAUlK,MAGdS,EAAUgB,QAAQI,GAAG,aAAa,SAAA7B,GAC9BkK,EAAUlK,MAGdS,EAAUgB,QAAQI,GAAG,kBAAkB,SAAAC,GACnCjB,EAAQiB,MAGZrB,EAAUgB,QAAQI,GAAG,sBAAsB,SAAAE,GACvChB,EAAQgB,GACRb,GAAQ,GACRc,YAAW,WACPd,GAAQ,KACT,QAGA,WACHT,EAAUgB,QAAQQ,gBAEvB,IA6BH,OACI,8BAEI,0BAASC,UAAU,QAAnB,UACI,yBAAQA,UAAU,eAAlB,UACI,qBAAKA,UAAU,qBAAf,SACI,+BAAI,mBAAGA,UAAU,uBAAjB,iBAEJ,qBAAKA,UAAU,uBAAf,SACI,+BAAM,mBAAGA,UAAU,sBAI/B,wBAAQuD,IAAI,kDAAkDzC,MAAO,EAAGC,OAAQ,EAAGkH,YAAa,EAAGC,iBAAe,EAACC,MAAM,aACrH,uBAAMnI,UAAU,aAAhB,iBAEQ6H,QAFR,IAEQA,OAFR,EAEQA,EAAMO,KAAI,SAAClI,EAAKmI,GAAW,IAAD,EACtB,OACI,sBAA4BrI,UAAWK,IAAOH,EAAIoI,SAAW,eAAgB,gBAA7E,UACI,qBAAKtI,UAAU,UAAf,SACI,oCAAKE,QAAL,IAAKA,GAAL,UAAKA,EAAKjB,YAAV,aAAK,EAAWsJ,MAAM,EAAG,OAE7B,sBAAKvI,UAAU,aAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,gBAAf,SAAgCE,EAAIjB,OACpC,qBAAKe,UAAU,gBAAf,SAAgCzE,EAAW2E,EAAIsI,eAEnD,qBAAKxI,UAAU,WAAf,SACCE,EAAIuI,eAVHJ,EAAM/M,eAkB5ByM,EAAS,sBAAK/H,UAAU,cAAf,UACJ+H,EADI,oBAEA,2BAGb,qBAAK/H,UAAU,kBAAf,SAKI,sBAAKA,UAAU,mBAAf,UACA,uBAAQ0I,OAAQ,kBAnD5BnK,EAAUgB,QAAQG,KAAK,sBACvBgB,QAAQC,IAAI,4CAkDmCgI,QAAS,WAvDxDpK,EAAUgB,QAAQG,KAAK,eAAgBT,IAuDmC7B,KAAK,OAAOgD,MAAOqG,EAASxG,SAAU,SAACC,GAAD,OAAS4H,EAAW5H,EAAIC,OAAOC,QAASJ,UAAU,cAAcM,YAAY,0BAC5K,wBAAQN,UAAU,iBAAkB5C,KAAK,SAASmD,QAAS,kBAzElE,WACT,GAAgB,OAAZkG,EAAkB,CAClB,IAAMmC,EAAM,CACR3J,KAAMA,EACNwJ,QAAShC,EACT6B,SAAWjI,GAEf9B,EAAUgB,QAAQG,KAAK,iBAAkBkJ,GACzCd,EAAW,KAiEkEe,IAAQxI,GAAG,gBAA5E,8BClHT,SAASyI,KAEpB,OACI,cAAC,IAAD,UACI,eAAC,SAAD,WACI,cAAC,QAAD,CAAOC,KAAK,UAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,aAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,UAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,SAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,QAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,QAAD,CAAOA,KAAK,IAAZ,SACI,cAAC,GAAD,W,uBCzCdC,GAAe,CACjBnL,MAAO,GACP6I,IAAK,GACLrH,MAAQ,sDCFZ,IAAM2J,GAAe,CACjBC,WAAW,GCDf,IAIeC,GAJKC,aAAgB,CAChC/J,cFIW,WAAsD,IAA/BD,EAA8B,uDAAtB6J,GAAc9K,EAAQ,uCAChE,OAAQA,EAAOd,MAEX,KAAKvC,EAED,OADA6F,QAAQC,IAAI,mBACLxB,EAEX,KAAKtE,EACD,OAAOsE,EAEX,KAAKtE,EAED,OAAO,6BAAKsE,GAAZ,IAAmBwF,WAAYzG,EAAOb,UAE1C,KAAKxC,EACD,OAAOsE,EAEX,KAAKtE,EACD,OAAO,6BAAKsE,GAAZ,IAAmBtB,MAAOK,EAAOb,UAErC,KAAKxC,EACD,OAAO,6BAAKsE,GAAZ,IAAmBF,KAAQf,EAAOb,QAAQ4B,KAAMI,MAAOnB,EAAOb,QAAQgC,QAE1E,KAAKxE,EACG,OAAO,6BAAKsE,GAAZ,IAAmBF,KAAOf,EAAOb,UAEzC,QACI,OAAO8B,IE9BfiK,eDEW,WAAuD,IAA/BjK,EAA8B,uDAAtB6J,GAAc9K,EAAQ,uCACjE,OAAQA,EAAOd,MAEX,KAAKxC,EAED,OAAO,6BAAKuE,GAAZ,IAAmBkK,QAASnL,EAAOb,QAAQS,OAE/C,KAAKlD,EAED,OADA8F,QAAQC,IAAI,UAAWzC,EAAOb,SACvB8B,EAEX,KAAKvE,EAED,OADA8F,QAAQC,IAAI,yBACLxB,EAEX,KAAKvE,EACD,OAAO,6BAAKuE,GAAZ,IAAmB8J,WAAW,IAElC,KAAKrO,EACD,OAAO,6BAAKuE,GAAZ,IAAmB8J,WAAW,IAGlC,QACI,OAAO9J,ME1BNmK,GAAiBC,eAMfC,GAJDC,aAAYP,GAAaQ,aAAgBJ,KCMvDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAACV,GAAD,QAGJgB,SAASC,eAAe,SAE1BT,GAAeU,IAAI7L,GAKnBhE,M","file":"static/js/main.43deaefd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const STATUS_CODE = {\n    SUCCESS: 200,\n    CREATED: 201,\n    UPDATED: 202,\n};\n\nexport const HomeType = {\n    TEST_SEND_REQUEST :'TEST_SEND_REQUEST',\n    DataProductError :'DataProductError',\n    DataProduct :'DataProduct',\n    SHOW_LOADING_ACTION :'SHOW_LOADING_ACTION',\n    HIDE_LOADING_ACTION :'HIDE_LOADING_ACTION',\n}\n\nexport const AuthenType = {\n    LOGIN_REQUEST : \"LOGIN_REQUEST\",\n    LOGIN_ADMIN :\"LOGIN_ADMIN\",\n    SET_TOKEN :'SET_TOKEN',\n    LOGIN_SUCCSESS :\"LOGIN_SUCCSESS\",\n    LOGIN_ERROR :\"LOGIN_ERROR\",\n    LOGIN_FACEBOOK : \"LOGIN_FACEBOOK\",\n    LOGIN_LOCAL : \"LOGIN_LOCAL\"\n}","export const Url_Sever = 'https://servercoffeehouse.herokuapp.com'\nexport const Url_SeverLocal = 'http://localhost:5000'\nexport const Url_Image = 'https://servercoffeehouse.herokuapp.com/images/'\nexport const accessToken =  sessionStorage.getItem('accessToken')\n\nexport const SetToken = (accessToken) => {\n    sessionStorage.setItem('accessToken', accessToken)\n}\n\nexport const GetToken = () => sessionStorage.getItem('accessToken');\n\n\n\nexport const SetTokenVerifyOTP = (accessTokenVerifyOTP) => {\n    sessionStorage.setItem('VerifyOTP', accessTokenVerifyOTP)\n}\n\n\nexport const GetTokenVerifyOTP = () => sessionStorage.getItem('VerifyOTP');\n\nexport const HandleNumTime = (num) => {\n    let result = \"\";\n    if (num > 0 && num < 10) {\n        result = \"0\" + num.toString();\n    }\n    else {\n        result = num.toString();\n    }\n    return result;\n}\n\nexport const HandleTime = (epoch) => {\n    let d = new Date(parseInt(epoch));\n    let doneTime = d.getFullYear() + \"-\" + HandleNumTime(d.getMonth() + 1) + \"-\" + HandleNumTime(d.getDate()) + \" \" + HandleNumTime(d.getHours()) + \":\" + HandleNumTime(d.getMinutes());\n    return doneTime;\n}\n\n","import axios from 'axios';\nimport { GetToken, GetTokenVerifyOTP, Url_Sever, Url_SeverLocal } from '../utils/until';\n\nconst instance = axios.create({\n  baseURL: Url_Sever,\n  timeout: 15000,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  },\n});\n\nconst instanceLocal = axios.create({\n  baseURL: Url_SeverLocal,\n  timeout: 15000,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  },\n});\n\n\nconst instanceMiddleware = axios.create({\n  baseURL: Url_SeverLocal,\n  timeout: 15000,\n  headers: {\n    Authorization: `Bearer ${GetToken()}`,\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  },\n});\n\n\n// const Token = localStorage.getItem('Token');\n\n//login\nexport const loginAdmin = (prams) => instance.post('/user/loginAdmin', prams);\n\n//getproduct\nexport const getdata = () => instance.get('/getalldata');\n\nexport const findUser = (params) => instanceLocal.post('/findUser', params);\n\nexport const VerifyOTP_API = (params) => instanceLocal.put('/checkOTP', params);\n\n\nexport const singup = (prams) => instanceLocal.post('/signup', prams);\nexport const loginUser = (prams) => instanceLocal.post('/login', prams);\n\nexport const updateUser_API = (params) => instanceMiddleware.put('/updateuser', params);\n","import { AuthenType } from \"../../constants\"\n\n\n\n\n\n\n\nexport const LOGIN_REQUEST_ADMIN = (admin) => {\n    return {\n        type: AuthenType.LOGIN_REQUEST,\n        payload :admin\n    }\n}\n\n\n\nexport const LOGIN_ADMIN = () => {\n    return {\n        type: AuthenType.LOGIN_ADMIN\n    }\n}\n\n\nexport const LOGIN_ERROR = (e) => {\n    return {\n        type: AuthenType.LOGIN_ERROR,\n        payload : e\n    }\n}\n\n\nexport const LOGIN_SUCCSESS = () => {\n    return {\n        type: AuthenType.LOGIN_SUCCSESS\n    }\n}\n\n export const SET_TOKEN = (token)=>{\n    return {\n        type:AuthenType.SET_TOKEN,\n        payload : token\n    }\n }\n\n\n export const LOGIN_FACEBOOK = (payload) => {\n    return {\n        type: AuthenType.LOGIN_FACEBOOK,\n        payload : payload\n    }\n}\n\nexport const LOGIN_LOCAL= (payload) => {\n    return {\n        type: AuthenType.LOGIN_LOCAL,\n        payload : payload\n    }\n}"," import { call, put, takeEvery, all, takeLatest, fork, take } from 'redux-saga/effects'\nimport { AuthenType } from '../../constants';\nimport { loginAdmin } from '../../services/api';\nimport { SET_TOKEN, LOGIN_ERROR, LOGIN_SUCCSESS } from 'redux/actions/authenAction';\nimport { SetToken } from 'utils/until';\n\n\nexport function* apiSideEffectLoginAdmin() {\n    const admin = yield take(AuthenType.LOGIN_REQUEST)\n    try {\n        const result = yield call(loginAdmin, admin.payload)\n        yield put(LOGIN_SUCCSESS())\n        yield put(SET_TOKEN(result.data.accessToken))\n        yield call(SetToken, result.data.accessToken)\n    } catch (e) {\n        yield put(LOGIN_ERROR(e))\n    }\n}\n\nexport function* apiLoginAdminSaga() {\n    yield takeLatest(AuthenType.LOGIN_ADMIN, apiSideEffectLoginAdmin);\n}\n","import { HomeType } from \"../../constants\"\n\nexport const set_Product = (product) => {\n    return {\n        type: HomeType.DataProduct,\n        payload :product\n    }\n}\n\nexport const set_ProductError = (e) => {\n    return {\n        type: HomeType.DataProductError,\n        payload :e\n    }\n}\n\nexport const TEST_SEND_REQUEST = () => {\n    return {\n        type: HomeType.TEST_SEND_REQUEST\n    }\n}\n\nexport const SHOW_LOADING_ACTION = () => {\n    return {\n        type: HomeType.SHOW_LOADING_ACTION\n    }\n}\n\nexport const HIDE_LOADING_ACTION = () => {\n    return {\n        type: HomeType.HIDE_LOADING_ACTION\n    }\n}","import { call, put, takeEvery, all, takeLatest, fork, take } from 'redux-saga/effects'\nimport { HomeType } from '../../constants/index';\nimport { getdata } from '../../services/api';\nimport { set_Product, set_ProductError, SHOW_LOADING_ACTION, HIDE_LOADING_ACTION } from '../actions/productAction';\n\nexport function* apiSideEffectTestProduct(action) {\n    try {\n        yield put(SHOW_LOADING_ACTION())\n        const data = yield call(getdata);\n        yield put(set_Product(data));\n        yield put(HIDE_LOADING_ACTION());\n    } catch (e) {\n        yield put(set_ProductError(e));\n    }\n}\n\nexport function* apiProductSaga() {\n    yield takeLatest(HomeType.TEST_SEND_REQUEST, apiSideEffectTestProduct);\n}","import { apiLoginAdminSaga } from \"./authen\";\nimport { all} from 'redux-saga/effects'\nimport { apiProductSaga } from \"./product\";\n\nexport default function* rootSaga() {\n    yield all([\n        apiLoginAdminSaga(),\n        apiProductSaga()\n    ]);\n\n}\n","import styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport {\n    MainContainer,\n    ChatContainer,\n    MessageList,\n    Message,\n    MessageInput,\n    Avatar,\n    ConversationHeader,\n    VoiceCallButton,\n    InfoButton,\n    VideoCallButton,\n    Search,\n    ConversationList,\n    Sidebar,\n    Conversation\n} from \"@chatscope/chat-ui-kit-react\";\nimport socketIOClient from \"socket.io-client\";\nimport React, { useState, useRef } from \"react\";\nimport { HandleTime } from \"utils/until\";\nimport { useSelector } from 'react-redux';\nimport { Alert, Button } from \"react-bootstrap\";\nimport { findUser } from \"services/api\";\nconst io = require(\"socket.io-client\");\n\nconst Chat = () => {\n    const socketRef = React.useRef();\n    const [mess, setMess] = useState([]);\n    const [message, setMessage] = useState('');\n    const [id, setId] = useState();\n    const [temp, settemp] = useState();\n    const [listuser, setListuser] = useState([]);\n    const [key, setKey] = useState();\n    const [show, setShow] = useState(false);\n    const name = useSelector(state => state.AuthenReducer.name)\n    const image = useSelector(state => state.AuthenReducer.image)\n    React.useEffect(() => {\n        socketRef.current = socketIOClient.connect('http://localhost:5000')\n\n        socketRef.current.emit('sendUser', name)\n\n        socketRef.current.on('sendId', data => {\n            setId(data)\n        })\n\n        socketRef.current.on('sendDataServer', dataGot => {\n            setMess(dataGot)\n        })\n\n        socketRef.current.on('sever_send_newuser', user => {\n            settemp(user)\n            setShow(true)\n            setTimeout(() => {\n                setShow(false)\n            }, 3000);\n        })\n\n        return () => {\n            socketRef.current.disconnect();\n        };\n    }, []);\n    const videoRef = useRef();\n    // const openMediaDevices = async (constraints) => {\n    //     return await navigator.mediaDevices.getUserMedia(constraints);\n    // }\n    // const videoRef = useRef();\n    // try {\n    //     const stream = openMediaDevices({'video':true,'audio':true});\n    //     videoRef.current.srcObject = stream;\n    //     videoRef.current.onloadedmetadata = function(){\n    //         videoRef.current.play();\n    //     }\n    //     //console.log(videoRef.current.srcObject = stream)\n    //    console.log(videoRef.current.play());\n    // } catch(error) {\n    //     console.error('Error accessing media devices.', error);\n    // }\n\n\n    const send = () => {\n        if (message !== null) {\n            const msg = {\n                name: name,\n                content: message,\n                createAt: Date.now(),\n                image: image\n            }\n            socketRef.current.emit('sendDataClient', msg)\n            setMessage('')\n        }\n    }\n    const onFindUser = () => {\n        findUser({ username: key }).then(res => console.log(res.data.data))\n    }\n    return (\n        <div>\n            <div className='container'>\n                <div className=\"form-group\">\n                    <input type=\"text\"\n                        className=\"form-control\" onChange={(val) => setKey(val.target.value)} name=\"timkiem\" id=\"\" aria-describedby=\"helpId\" placeholder=\"Nhap username\" />\n                    <button type=\"submit\" onClick={() => onFindUser()} className=\"btn btn-primary\">Tim kiem ban be</button>\n                </div>\n\n                {/* <div className='container'>\n                    {show && name && name !== temp ?\n                        <Alert variant=\"success\">\n                            <Alert.Heading>Welcome {temp} join group</Alert.Heading>\n                            <div className=\"d-flex justify-content-end\">\n                                <Button onClick={() => setShow(false)} variant=\"outline-success\">\n                                    Close\n                                </Button>\n                            </div>\n                        </Alert> : <div />}\n                    <div style={{ position: \"relative\", height: \"600px\" }}>\n\n                        <MainContainer>\n                            <Sidebar position=\"left\" scrollable={false}>\n                                <Search placeholder=\"Search...\" />\n                                <ConversationList>\n                                    <Conversation name=\"Pham Jin\" info=\"Hello\">\n                                        <Avatar src={image} name=\"Pham Jin\" status=\"available\" />\n                                    </Conversation>\n\n\n\n                                </ConversationList>\n                            </Sidebar>\n                            <ChatContainer>\n                                <ConversationHeader>\n                                    <Avatar src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSoW3g9hjXIasgon-kpzz-lD9z4SsalyPbZA&usqp=CAU' name=\"image\" />\n                                    <ConversationHeader.Content userName=\"Chat React JS\" info=\"Active 10 mins ago\" />\n                                    <ConversationHeader.Actions>\n                                        <VoiceCallButton />\n                                        <VideoCallButton />\n                                        <InfoButton />\n                                    </ConversationHeader.Actions>\n                                </ConversationHeader>\n                                <MessageList>\n                                    {\n                                        mess.map((val, index) => {\n                                            return (\n                                                <Message model={{\n                                                    message: val.content,\n                                                    sentTime: \"just now\",\n                                                    sender: \"Joe\",\n                                                    direction: val.id === id ? \"outgoing\" : \"incoming\",\n                                                    position: \"single\",\n\n                                                }} >\n                                                    <Avatar src={val.image} name=\"Pham Jin\" />\n                                                    <Message.Header sender={val.name} sentTime={HandleTime(val.createAt)} />\n                                                </Message>\n                                            )\n                                        })\n                                    }\n\n                                </MessageList>\n                                <MessageInput onChange={(val) => setMessage(val)} placeholder=\"Type message here\" onSend={() => send()} />\n                            </ChatContainer>\n                        </MainContainer>\n                        {/* <video id=\"localVideo\" ref={videoRef} autoplay playsinline controls=\"false\"/> */}\n\n                    {/* </div> */} \n\n                {/* </div> */}\n            </div >\n        </div >\n    );\n}\nexport default Chat;","const FbSvg = () => {\n    return (\n        <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\n            <g>\n                <path fill=\"#4A7AFF\" d=\"M1015.363,506.525c0,279.749-226.775,506.524-506.525,506.524c-279.749,0-506.524-226.775-506.524-506.524\n                  C2.313,226.775,229.089,0,508.838,0C788.588,0,1015.363,226.775,1015.363,506.525z\" />\n                <path fill=\"#FFFFFF\" d=\"M663.688,149.015v114.697c0,0-131.686-19.113-131.686,65.843v84.957h118.941L636.08,544.072H532.002v337.709\n                  H400.316V544.072l-112.572-2.126V414.512H398.19V316.81c0,0-7.288-145.343,135.938-172.038\n                  C593.602,133.68,663.688,149.015,663.688,149.015z\" />\n                <path fill=\"#DCE1EB\" d=\"M663.688,263.712V149.015c0,0-70.086-15.335-129.56-4.243c-9.291,1.73-17.932,3.973-25.993,6.623v730.387\n                  h23.867V544.072h104.07l14.871-129.561H532.002c0,0,0,0,0-84.957C532.002,244.599,663.688,263.712,663.688,263.712z\" />\n            </g>\n        </svg>\n    )\n}\nexport default FbSvg;","import FbSvg from '../../assets/svg/facebooksvg'\nimport FacebookLogin from 'react-facebook-login';\nimport axios from 'axios';\nimport { LOGIN_FACEBOOK } from 'redux/actions/authenAction';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { SetToken } from 'utils/until';\nconst LoginFB = () => {\n  const dispatch = useDispatch();\n  const history = useHistory()\n  const responseFacebook = (response) => {\n    axios.post('http://localhost:5000/loginFb', {FB :response})\n      .then(function (res) {\n        dispatch(LOGIN_FACEBOOK({ name: response.name, image: response.picture.data.url }))\n        history.push('/chat')\n        SetToken(response.accessToken);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n\n  }\n\n  return (\n\n    <FacebookLogin\n      appId=\"219847566579112\"\n      autoLoad={false}\n      fields=\"name,email,picture\"\n      cssClass=\"ant-btn\"\n      icon={<FbSvg />}\n      textButton=' Facebook'\n      callback={responseFacebook} />\n\n  )\n}\nexport default LoginFB;","const GoogleSvg = () => {\n    return (\n        <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\n            <g>\n                <path fill=\"#59C36A\" d=\"M827.301,875.968c-84.521,71.388-194.169,116.693-313.528,116.693c-177.609,0-333.52-97.848-418.041-240.62\n                  l31.646-145.858l140.255-26.039c32.553,105.078,130.779,182.178,246.141,182.178c55.964,0,107.937-17.703,150.767-49.112\n                  l134.777,20.558L827.301,875.968z\" />\n                <path fill=\"#00A66C\" d=\"M827.301,875.968l-27.984-142.201l-134.777-20.558c-42.83,31.409-94.803,49.112-150.767,49.112v230.34\n                  C633.132,992.661,742.779,947.355,827.301,875.968z\" />\n                <g id=\"Connected_Home_1_\">\n                    <g>\n                        <g>\n                            <g>\n                                <path fill=\"#FFDA2D\" d=\"M256.781,505.331c0,26.267,3.998,51.396,10.851,74.813l-171.9,171.897\n                  c-42.83-71.957-69.29-156.48-69.29-246.71c0-90.233,26.46-174.754,69.29-246.711l137.965,23.743l33.936,148.154\n                  C260.779,453.932,256.781,479.06,256.781,505.331L256.781,505.331z\" />\n                            </g>\n                        </g>\n                    </g>\n                </g>\n                <path fill=\"#4086F4\" d=\"M1001.103,505.331c0,148.48-68.719,281.547-173.802,370.637L664.539,713.209\n                  c33.121-23.988,61.107-55.971,79.384-93.66h-230.15c-15.993,0-28.556-12.567-28.556-28.554V419.666\n                  c0-15.99,12.563-28.554,28.556-28.554h450.78c13.707,0,25.698,9.708,27.983,23.412\n                  C998.247,444.225,1001.103,475.063,1001.103,505.331L1001.103,505.331z\" /><path fill=\"#4175DF\" d=\"M743.924,619.549c-18.275,37.689-46.264,69.672-79.382,93.66l162.759,162.759\n                  c105.083-89.09,173.802-222.153,173.802-370.637c0-30.269-2.855-61.106-8.567-90.807c-2.284-13.704-14.278-23.412-27.984-23.412\n                  H513.772v228.437H743.924z\" />\n                <path fill=\"#FF641A\" d=\"M835.297,154.107c0.571,7.996-2.855,15.422-7.996,21.131L705.086,296.881\n                  c-9.704,10.278-25.694,11.421-37.118,2.855c-45.119-33.693-98.231-51.396-154.195-51.396\n                  c-115.361,0-213.588,77.095-246.141,182.178L95.731,258.62C180.253,115.848,336.163,18,513.772,18\n                  c113.647,0,224.439,41.88,311.244,114.978C831.298,138.119,834.723,146.112,835.297,154.107L835.297,154.107z\" /><path fill=\"#F03800\" d=\"M667.966,299.736c11.422,8.567,27.411,7.423,37.119-2.855l122.214-121.643\n                  c5.143-5.709,8.569-13.133,7.996-21.131c-0.575-7.997-3.999-15.988-10.279-21.13C738.212,59.88,627.42,18,513.772,18v230.34\n                  C569.736,248.34,622.849,266.043,667.966,299.736z\" />\n            </g>\n        </svg>\n\n    );\n}\nexport default GoogleSvg;","import GoogleSvg from '../../assets/svg/googlesvg'\n\nconst LoginGoogle = () => {\n    return (\n        <button type=\"button\" className=\"ant-btn mr-2\">\n            <span role=\"img\" className=\"anticon\"> <GoogleSvg /> </span>\n            <span className='ggfb'>Google</span>\n        </button>\n    );\n}\nexport default LoginGoogle;","const MailSvg = () => {\n    return (\n        <svg viewBox=\"64 64 896 896\" focusable=\"false\" className='icon-input' data-icon=\"mail\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path  style={{color:'#3e79f7'}} d=\"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 110.8V792H136V270.8l-27.6-21.5 39.3-50.5 42.8 33.3h643.1l42.8-33.3 39.3 50.5-27.7 21.5zM833.6 232L512 482 190.4 232l-42.8-33.3-39.3 50.5 27.6 21.5 341.6 265.6a55.99 55.99 0 0068.7 0L888 270.8l27.6-21.5-39.3-50.5-42.7 33.2z\"></path>\n        </svg>\n    )\n}\nexport default MailSvg;","import LoginFB from \"components/loginFB\";\nimport LoginGoogle from \"components/loginGoogle\";\nimport { useFormik } from \"formik\";\nimport React, { useCallback } from \"react\";\nimport {\n    Link, useHistory\n} from \"react-router-dom\";\nimport MailSvg from \"../../assets/svg/mailsvg\";\n\nimport './style.css';\nimport * as Yup from \"yup\";\nimport { LOGIN_LOCAL } from \"redux/actions/authenAction\";\nimport { useDispatch } from \"react-redux\";\nconst Forgot = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const formik = useFormik({\n        initialValues: {\n            name: \"\",\n        },\n        validationSchema: Yup.object({\n            name: Yup.string()\n                .required(\"Please input your name??\"),\n        }),\n        onSubmit: (valuesinput) => {\n            //console.log(valuesinput.name)\n            dispatch(LOGIN_LOCAL(valuesinput.name))\n            history.push('/chatEx')\n        }\n    });\n    return (\n        <div>\n            <div className='view_box'>\n                <div className='box' >\n                    <div className='container' style={{ paddingLeft: 50, paddingRight: 50 }}>\n                        <div className='div_box20' />\n                        <div className=\"form-group\" >\n                            <div style={{ textAlign: 'center' }}>\n                                <img src='https://emilus.themenate.net/img/logo.png' height={70} width={100} />\n\n                                <h3 style={{ fontWeight: '700', fontSize: '20px' }}>Enter your Name?</h3>\n                                <div className='div_box5' />\n\n                                {/* <p className='color_text'>Enter your Full Name</p> */}\n                            </div>\n                            <form onSubmit={formik.handleSubmit}>\n                                <div className='div_input'>\n                                    <input className='color_input' name='name' type=\"text\"\n                                        value={formik.values.name}\n                                        onChange={formik.handleChange} id=\"login-form_email\" placeholder='Name' className=\"ant-input\" />\n                                    <span className='text-primary'>\n                                        <MailSvg />\n                                    </span>\n                                </div>\n                                <div className='div_box5' />\n                                <div className='div_box20' >\n                                    {formik.errors.name && (\n                                        <span className='colorErr' >{formik.errors.name}</span>\n                                    )}\n                                </div>\n                                <div className='div_box5' />\n                                <button type=\"submit\" className=\"ant-btn ant-btn-primary ant-btn-block\">\n                                    <span id=\"btntext\">Send</span>\n                                </button>\n                            </form>\n                            \n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n    );\n}\nexport default Forgot;","import './style.css';\nconst Welcome = (props) => {\n\n    return (\n        <div>\n            <div >\n                <div className=\"container\">\n                    <div className=\"img-right\">\n                        <img width=\"100px\" src=\"https://emilus.themenate.net/img/logo-white.png\" alt=\"\" />\n                    </div>\n                    <div className=\"content_top\">\n                        <img className=\"imgfluid\" src={props.img} alt=\"\" />\n                    </div>\n                    <div className=\"content_bottom\">\n                        <h1 className=\"text-white title bold size30\">Welcome to emilus</h1>\n                        <p className=\"text-white\" style={{ lineHeight: '1.8' }}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ullamcorper\n                            nisl erat, vel convallis elit fermentum pellentesque.</p>\n                    </div>\n                    <div className=\"content_footer\">\n                        <a className=\"text-white\" href=\"/#\">Term &amp; Conditions</a>\n                        <span className=\"mx-2 text-white\"> | </span>\n                        <a className=\"text-white\" href=\"/#\">Privacy &amp; Policy</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Welcome;","const LockSvg = () => {\n    return (\n        <svg viewBox=\"64 64 896 896\" focusable=\"false\" className='icon-input' data-icon=\"lock\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path style={{color:'#3e79f7'}} d=\"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" />\n        </svg>\n    )\n}\nexport default LockSvg;","const EgeSvg = () => {\n    return (\n        <path d=\"M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z\"></path>\n    )\n}\nexport default EgeSvg;","const EgeActiveSvg = () => {\n    return (\n        <path id='ege' d=\"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\"></path>\n    )\n}\nexport default EgeActiveSvg;","import React, { useState, useRef } from \"react\";\nimport {\n    Link, useHistory\n} from \"react-router-dom\";\nimport './style.css';\nimport Welcome from \"components/welcome\";\n\nimport MailSvg from \"assets/svg/mailsvg\";\nimport LockSvg from \"assets/svg/locksvg\";\nimport EgeSvg from \"assets/svg/eyesvg\";\nimport EgeActiveSvg from \"assets/svg/eyeactivesvg\";\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport LoginFB from \"components/loginFB\";\nimport LoginGoogle from \"components/loginGoogle\";\n\nimport { LOGIN_ADMIN, LOGIN_ERROR, LOGIN_REQUEST_ADMIN, SET_TOKEN } from \"redux/actions/authenAction\";\nimport { accessToken } from 'utils/until';\nimport { loginAdmin, loginUser } from \"services/api\";\nimport { SetToken } from '../../utils/until';\n\n\nconst SignIn = () => {\n\n\n    const [isshow, setisshow] = useState(false);\n\n    const token = useSelector(state => state?.AuthenReducer?.token)\n    const error = useSelector(state => state?.AuthenReducer?.errorlogin)\n    const refEmail = useRef('input1');\n    const refPassword = useRef('input2');\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            gmail: \"\",\n            password: \"\",\n        },\n        validationSchema: Yup.object({\n            gmail: Yup.string()\n                .email(\"Please enter a validate email!\")\n                .required(\"Please input your email address\"),\n            password: Yup.string()\n                .min(6, \"Minimum 6 characters\")\n                .required(\"Please input your password\"),\n\n        }),\n        onSubmit: async (valuesinput) => {\n            loginUser(valuesinput).then(res =>{\n                if(res.status == 200){\n                    alert('Login thanh cong')\n                    SetToken(res.data.accessToken)\n                    history.push('/chat')\n                }\n                else if(res.status == 201){\n                    alert('Tai khoan chua duoc kich hoat')\n                }\n                else{\n                    alert('Sai tai khoan hoac mat khau ')\n                }\n               \n            }).catch(e=>{\n                alert('Call api that bai')\n                LOGIN_ERROR(e);\n            })\n        }\n    });\n\n   \n    return (\n        <div style={{ height: '100vh', overflow: 'hidden', color: '#455560' }}>\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-8\">\n                        <div className=\"input-from\">\n                            <div className=\"input-form-row\">\n                                <h1 className=\"bold size30\"> Sign In</h1>\n                                <div className='div_box5' />\n                                <p style={{ color: '#72849a' }}>Don't have an account yet? <Link to=\"/signup\">Sign Up</Link></p>\n                                <div className='div_box20' />\n                                <div className='div_box20' />\n                                <form onSubmit={formik.handleSubmit}>\n                                    <div className=\"form-group\" >\n\n                                        <label className=\"label_input\" >Email</label><div className='div_box5' />\n                                        <div className='div_input'>\n                                            <input\n                                                ref={refEmail}\n                                                type=\"email\"\n                                                name='gmail'\n                                                className={!formik.errors.gmail ? \"ant-input\" : \"ant-input error\"}\n\n                                                value={formik.values.gmail}\n                                                onChange={formik.handleChange}\n                                            />\n                                            {formik.errors.gmail && (\n                                                <p className='colorErr' >{formik.errors.gmail}</p>\n                                            )}\n                                            <span className='text-primary'>\n                                                <MailSvg />\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className='div_box20' />\n                                    <div className=\"form-group\" >\n\n                                        <label className=\"label_input\" >Password</label><div className='div_box5' />\n                                        <div className='div_input'>\n                                            <input\n                                                ref={refPassword}\n                                                name='password'\n                                                type={isshow ? \"text\" : \"password\"}\n                                                className={!formik.errors.password ? \"ant-input\" : \"ant-input error\"}\n                                                value={formik.values.password}\n                                                onChange={formik.handleChange}\n                                            />\n                                            {formik.errors.password && (\n                                                <p className='colorErr' >{formik.errors.password}</p>\n                                            )}\n                                            <span className='text-primary'>\n                                                <LockSvg />\n                                            </span>\n                                            <svg onClick={() => setisshow(!isshow)} viewBox=\"64 64 896 896\" className='icon_password' focusable=\"false\" data-icon=\"eye-invisible\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n                                                {!isshow ? <EgeSvg />\n                                                    : <EgeActiveSvg />}\n                                            </svg>\n                                        </div>\n\n                                    </div>\n                                    <div className='div_box20' />\n                                    {/* onClick={() => submitLogin()}  */}\n                                    <button type=\"submit\" className=\"ant-btn ant-btn-primary ant-btn-block\">\n                                        <span id=\"btntext\">Sign In</span>\n                                    </button>\n                                </form>\n\n                                <div className='div_box20' />\n                                <div className='div_box20' />\n\n                                <div className=\"box_connect\">\n                                    <div className=\"row text-center\">\n                                        <div className=\"col-3 col-sm-4 col-md-4 col-lg-4 col-xl-4 netdut\">\n                                            <div className='netdut1' />\n                                        </div>\n                                        <div className=\"col-5 col-sm-4 col-md-4 col-lg-4 col-xl-4\">\n                                            <p className=\"content\">or connect with</p>\n                                        </div>\n                                        <div className=\"col-3 col-sm-4 col-md-4 col-lg-4 col-xl-4 netdut\">\n                                            <div className='netdut2' />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"d-flex justify-content-center\">\n                                    <LoginGoogle />\n                                    <LoginFB />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-0 col-sm-4 col-md-4 col-lg-4 col-xl-4 IMGBG\">\n                        <Welcome img='https://emilus.themenate.net/img/others/img-18.png' />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default SignIn;","import React, { useState, useRef } from \"react\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport EgeActiveSvg from \"../../assets/svg/eyeactivesvg\";\nimport EgeSvg from \"../../assets/svg/eyesvg\";\nimport LockSvg from \"../../assets/svg/locksvg\";\nimport MailSvg from \"../../assets/svg/mailsvg\";\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\n\nimport Welcome from \"../../components/welcome\"\nimport { singup } from \"services/api\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { SetTokenVerifyOTP } from \"utils/until\";\n\nconst SignUp = () => {\n    const [isshow, setisshow] = useState(false);\n    const [isshowConfirm, setisshowConfirm] = useState(false);\n    const history = useHistory();\n    const formik = useFormik({\n        initialValues: {\n            gmail: \"\",\n            password: \"\",\n            confirmpassword: \"\",\n        },\n        validationSchema: Yup.object({\n            gmail: Yup.string()\n                .email(\"Please enter a validate email!\")\n                .required(\"Please input your email address\"),\n            password: Yup.string()\n                .min(6, \"Minimum 6 characters\")\n                .required(\"Please input your password\"),\n            confirmpassword: Yup.string()\n                .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                .required(\"Please input your password\"),\n\n        }),\n        onSubmit: values => {\n            singup(values).then(res => {\n                if(res.status == 200){\n                    alert('Dang ky thanh cong, He thong da gui OTP vao email cua ban')\n                    history.push('/verifyOTP');\n                    SetTokenVerifyOTP(res.data.accessToken)\n                }\n                else{\n                    alert('Dang ky that bai, Tai khoan da ton tai!')\n                }\n                \n            }).catch((e) => console.log(e))\n\n        }\n    });\n    return (\n        <div style={{ height: '100vh', overflow: 'hidden', color: '#455560' }}>\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-8\">\n                    <div className=\"container input-from\">\n                        <div className=\"input-form-row\">\n                            <div>\n                                <h1 className=\"bold size30\">Sign Up</h1>\n                                <div className='div_box5' />\n                                <p style={{ color: '#72849a' }}>Already have an account ? <Link to=\"/signin\">Sign In</Link></p>\n                                <div className='div_box20' />\n                                <div className='div_box20' />\n                                <form onSubmit={formik.handleSubmit}>\n                                    <div className=\"form-group\" >\n\n                                        <label className=\"label_input\" >Email</label><div className='div_box5' />\n                                        <div className='div_input'>\n                                            <input\n                                                type=\"email\"\n                                                name='gmail'\n                                                className={!formik.errors.email ? \"ant-input\" : \"ant-input error\"}\n                                                value={formik.values.gmail}\n                                                onChange={formik.handleChange}\n                                            />\n                                            {formik.errors.gmail && (\n                                                <p className='colorErr'>{formik.errors.gmail}</p>\n                                            )}\n                                            {/* <i className=\"far fa-envelope text-primary icon-input\"></i> */}\n                                            <MailSvg />\n                                        </div>\n                                    </div>\n                                    <div className='div_box20' />\n\n                                    <div className=\"form-group\" >\n                                        <label className=\"label_input\" >Password</label><div className='div_box5' />\n                                        <div className='div_input'>\n                                            <input\n                                                name='password'\n                                                type={isshow ? \"text\" : \"password\"}\n                                                className={!formik.errors.password ? \"ant-input\" : \"ant-input error\"}\n                                                value={formik.values.password}\n                                                onChange={formik.handleChange}\n                                            />\n                                            {formik.errors.password && (\n                                                <p className='colorErr'>{formik.errors.password}</p>\n                                            )}\n                                            <span className='text-primary'>\n                                                <LockSvg />\n                                            </span>\n                                            <svg onClick={() => setisshow(!isshow)} viewBox=\"64 64 896 896\" className='icon_password' focusable=\"false\" data-icon=\"eye-invisible\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n                                                {!isshow ? <EgeSvg />\n                                                    : <EgeActiveSvg />}\n                                            </svg>\n                                        </div>\n                                    </div>\n                                    <div className='div_box20' />\n\n                                    <div className=\"form-group\">\n                                        <label className=\"label_input\" >ConfirmPassword</label><div className='div_box5' />\n                                        <div className=\"div_input\" >\n                                            <input\n                                                name='confirmpassword'\n                                                type={isshowConfirm ? \"text\" : \"password\"}\n                                                className=\"ant-input\"\n\n                                                value={formik.values.confirmpassword}\n                                                onChange={formik.handleChange}\n                                            />\n                                            {formik.errors.confirmpassword && (\n                                                <p className='colorErr'>{formik.errors.confirmpassword}</p>\n                                            )}\n                                            <span className='text-primary'>\n                                                <LockSvg />\n                                            </span>\n                                            <svg onClick={() => setisshowConfirm(!isshowConfirm)} viewBox=\"64 64 896 896\" className='icon_password' focusable=\"false\" data-icon=\"eye-invisible\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n                                                {!isshowConfirm ? <EgeSvg />\n                                                    : <EgeActiveSvg />}\n\n                                            </svg>\n                                        </div>\n                                    </div>\n                                    <div className='div_box20' />\n\n                                    <button type=\"submit\" className=\"ant-btn ant-btn-primary ant-btn-block\">\n                                        <span id=\"btntext\"> Sign Up </span>\n                                    </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-0 col-sm-4 col-md-4 col-lg-4 col-xl-4 IMGBG\">\n                    <Welcome img='https://emilus.themenate.net/img/others/img-19.png' />\n                </div>\n            </div>\n\n        </div>\n    );\n}\nexport default SignUp;","import React, { useState } from 'react';\nimport OtpInput from 'react-otp-input';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { VerifyOTP_API } from 'services/api';\nimport { GetTokenVerifyOTP } from 'utils/until';\n\n\nconst VerifyOTP = () => {\n    const [OTP, setOTP] = useState(0)\n    const history = useHistory();\n    return (\n        <div style={{ width: '100%', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ height: '200px', width: '340px' }}>\n                <h1 style={{ textAlign: 'center' }}>Ma xac thuc OTP duoc gui vao gmail cua ban</h1>\n                <OtpInput\n                    value={OTP}\n                    onChange={(val) => setOTP(val)}\n                    numInputs={6} containerStyle={{ justifyContent: 'space-around', alignItems: 'center' }}\n                    inputStyle={{ width: '40px', height: '40px' }}\n                    separator={<span> </span>}\n                />\n                <div style={{ height: '40px' }}></div>\n                <div style={{ width: '50%', margin: 'auto' }}>\n                    <button type=\"button\" onClick={() =>\n                        VerifyOTP_API({OTP : parseInt(OTP), tokenOTP : GetTokenVerifyOTP()})\n                        .then(res => {\n                            if(res.status == 200){\n                                alert(res.data.message)\n                                history.push('/login');\n                            }\n                            else if(res.status == 201){\n                                alert(res.data.message);\n                            }\n                        })\n                        .catch(err => console.log(err))\n                    } className=\"btn btn-primary btn-lg\">Enter Verify OTP</button>\n                </div>\n\n            </div>\n        </div>\n    );\n}\nexport default VerifyOTP;","import axios from 'axios';\nimport { useFormik } from 'formik';\nimport { Url_SeverLocal } from 'utils/until';\nimport * as Yup from \"yup\";\nimport React from 'react';\nimport { updateUser_API } from '../../services/api';\n\nconst UpdateUser = () => {\n    const [image, setImage] = React.useState('');\n    \n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n            phone: '',\n            address: \"\",\n            gender: \"\",\n        },\n        validationSchema: Yup.object({\n            username: Yup.string()\n                .required(\"Please input your full name??\"),\n            phone: Yup.string()\n                .required(\"Please input your phone??\"),\n            address: Yup.string()\n                .required(\"Please input your address??\"),\n            gender: Yup.string()\n                .required(\"Please input your gender??\"),\n        }),\n        onSubmit: (values) => {\n            if(image){\n                updateUser_API({...values, avatar : image}).\n                then(res => {\n                    if(res.status == 200){\n                        alert('Cap nhat thong tin thanh cong');\n                    }\n                    else{\n                        alert('Cap nhat thong tin that bai. Vui long thu lai sau!');\n                    }\n                }).catch(err =>console.log(err))\n            }\n            \n        }\n    });\n\n    const onChangeFile = async (evt) => {\n        evt.preventDefault();\n        const formData = await new FormData();\n        formData.append(\"images\", evt.target.files[0]);\n        const config = await {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        await axios.post(Url_SeverLocal + '/uploadImages', formData, config).then(res => {\n            setImage(res.data.fileNameInServer);\n        })\n    }\n\n    return (\n        <div className='container'>\n            <div className='div_box20' />\n            <h1>Cap nhat thong tin ca nhan</h1>\n            <form onSubmit={formik.handleSubmit} encType=\"multipart/form-data\">\n                <div className=\"form-group\">\n                    <label className=\"label_input\" >Avatar</label><div className='div_box5' />\n\n                    <input\n                        name='images'\n                        type=\"file\"\n                        className=\"ant-input\"\n                        onChange={(evt) => onChangeFile(evt)}\n\n                    />\n                    <div className='div_box5' />\n                    {\n                        image !== '' ?\n                            <div style={{ width: '100px', height: '100px', margin : 'auto' }}>\n                                <img style={{ width: '100%', height: '100%', borderRadius: '50%' }} src={'http://localhost:5000/' + image} />\n                            </div> : <div />\n                    }\n\n                    <div className='div_box20' />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"label_input\" >Full name</label><div className='div_box5' />\n                    <div className=\"div_input\" >\n                        <input\n                            name='username'\n                            type=\"text\"\n                            className=\"ant-input\"\n                            value={formik.values.username}\n                            onChange={formik.handleChange}\n                        />\n                        {/* {formik.errors.confirmpassword && (\n                            <p className='colorErr'>{formik.errors.confirmpassword}</p>\n                        )} */}\n                    </div>\n                    <div className='div_box20' />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"label_input\">Phone</label><div className='div_box5' />\n                    <div className=\"div_input\" >\n                        <input\n                            name='phone'\n                            type=\"text\"\n                            className=\"ant-input\"\n                            value={formik.values.phone}\n                            onChange={formik.handleChange}\n                        />\n                        {/* {formik.errors.confirmpassword && (\n                            <p className='colorErr'>{formik.errors.confirmpassword}</p>\n                        )} */}\n\n                    </div>\n                    <div className='div_box20' />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"label_input\" >Address</label><div className='div_box5' />\n                    <div className=\"div_input\" >\n                        <input\n                            name='address'\n                            type=\"text\"\n                            className=\"ant-input\"\n                            value={formik.values.address}\n                            onChange={formik.handleChange}\n                        />\n                        {/* {formik.errors.confirmpassword && (\n                            <p className='colorErr'>{formik.errors.confirmpassword}</p>\n                        )} */}\n                    </div>\n                    <div className='div_box20' />\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"label_input\">Gender</label><div className='div_box5' />\n                    <div className=\"div_input\">\n                        <input\n                            name='gender'\n                            type=\"text\"\n                            className=\"ant-input\"\n                            value={formik.values.gender}\n                            onChange={formik.handleChange}\n                        />\n                        {/* {formik.errors.confirmpassword && (\n                            <p className='colorErr'>{formik.errors.confirmpassword}</p>\n                        )} */}\n                    </div>\n                    <div className='div_box20' />\n                </div>\n                <button type=\"submit\" className=\"ant-btn ant-btn-primary ant-btn-block\">\n                    <span id=\"btntext\">Update</span>\n                </button>\n                <div className='div_box20' />\n            </form>\n        </div>\n    );\n}\nexport default UpdateUser;","import './main.css';\nimport socketIOClient from \"socket.io-client\";\nimport React, { useState, useRef } from \"react\";\nimport { HandleTime } from \"utils/until\";\nimport { useSelector } from 'react-redux';\nimport { findUser } from \"services/api\";\n\nconst ChatEx = () => {\n    const socketRef = React.useRef();\n    const [mess, setMess] = useState([]);\n    const [message, setMessage] = useState('');\n    const [id, setId] = useState();\n    const [temp, settemp] = useState();\n    const [listuser, setListuser] = useState([]);\n    const [key, setKey] = useState();\n    const [show, setShow] = useState(false);\n    // const [name, setName] = useState('');\n    const [typing, setTyping] = useState('');\n    // const image = useSelector(state => state.AuthenReducer.image)\n    const name = useSelector(state => state.AuthenReducer.name)\n    React.useEffect(() => {\n        socketRef.current = socketIOClient.connect('http://localhost:5000')\n\n        socketRef.current.emit('sendUser', name)\n\n        socketRef.current.on('sendId', data => {\n            setId(data)\n        })\n\n        socketRef.current.on('OnTyping', data => {\n            //console.log('typing',data)\n            setTyping(data)\n        })\n\n        socketRef.current.on('OffTyping', data => {\n            setTyping(data)\n        })\n\n        socketRef.current.on('sendDataServer', dataGot => {\n            setMess(dataGot)\n        })\n\n        socketRef.current.on('sever_send_newuser', user => {\n            settemp(user)\n            setShow(true)\n            setTimeout(() => {\n                setShow(false)\n            }, 3000);\n        })\n\n        return () => {\n            socketRef.current.disconnect();\n        };\n    }, []);\n\n\n\n    const send = () => {\n        if (message !== null) {\n            const msg = {\n                name: name,\n                content: message,\n                socketID : id\n            }\n            socketRef.current.emit('sendDataClient', msg)\n            setMessage('')\n        }\n    }\n\n    const onFindUser = () => {\n        findUser({ username: key }).then(res => console.log(res.data.data))\n    }\n\n    const onTyping = () => {\n        socketRef.current.emit('UserOnTyping', name)\n    }\n\n    const offTyping = () => {\n        socketRef.current.emit('UserOffTyping')\n        console.log('Triggered because this input lost focus')\n    }\n\n    return (\n        <div>\n            \n            <section className=\"msger\">\n                <header className=\"msger-header\">\n                    <div className=\"msger-header-title\">\n                        <h1><i className=\"fas fa-comment-alt\" /> D13CNPM6</h1>\n                    </div>\n                    <div className=\"msger-header-options\">\n                        <span><i className=\"fas fa-cog\" /></span>\n                    </div>\n                </header>\n                {/* <iframe src=\"https://www.nhaccuatui.com/mh/background/t7bN6OwSwl8G\" width={1} height={1} frameBorder={0} allowFullScreen allow=\"autoplay\" /> */}\n            <iframe src=\"https://www.nhaccuatui.com/mh/auto/t7bN6OwSwl8G\" width={1} height={1} frameBorder={0} allowFullScreen allow=\"autoplay\" />\n                <main className=\"msger-chat\">\n                    {\n                        mess?.map((val, index) => {\n                            return (\n                                <div key={index.toString()} className={id !== val.socketID ? \"msg left-msg\" :\"msg right-msg\"}>\n                                    <div className=\"msg-img\" >\n                                        <h1>{val?.name?.slice(0, 1)}</h1>\n                                    </div>\n                                    <div className=\"msg-bubble\">\n                                        <div className=\"msg-info\">\n                                            <div className=\"msg-info-name\">{val.name}</div>\n                                            <div className=\"msg-info-time\">{HandleTime(val.createAt)}</div>\n                                        </div>\n                                        <div className=\"msg-text\">\n                                        {val.content}\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                    {\n                    typing ? <div className=\"typing-demo\">\n                        {typing} dang chat !!!\n                    </div> : <div />\n                }\n                </main>\n                <div className=\"msger-inputarea\">\n                    {/* <div className=\"input-group mb-3\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Nhap room\" />\n                        <button className=\"btn btn-success\" type=\"button\" id=\"button-addon2\">Tao Room</button>\n                    </div> */}\n                    <div className=\"input-group mb-3\">\n                    <input  onBlur={() => offTyping()} onFocus={() => onTyping()} type=\"text\" value={message} onChange={(val) => setMessage(val.target.value)}  className=\"msger-input\" placeholder=\"Enter your message...\" />\n                        <button className=\"msger-send-btn\"  type=\"button\" onClick={() => send()} id=\"button-addon2\">Send</button>\n                    </div>\n\n                </div>\n            </section>\n           \n        </div >\n    );\n}\nexport default ChatEx;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Chat from \"../containers/chat\";\nimport Forgot from \"../containers/forgot\";\nimport SignIn from \"../containers/signin\";\nimport SignUp from \"../containers/signup\";\nimport Product from '../containers/product/index';\nimport VerifyOTP from \"containers/verifyOTP\";\nimport UpdateUser from \"containers/updateUser.js\";\nimport ChatEx from '../containers/chatEx/index';\n\nexport default function RouterApp() {\n\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/ChatEx\">\n                    <ChatEx />\n                </Route>\n                <Route path=\"/verifyOTP\">\n                    <VerifyOTP />\n                </Route>\n                <Route path=\"/update-user\">\n                    <UpdateUser />\n                </Route>\n                <Route path=\"/authen\">\n                    <Forgot />\n                </Route>\n                <Route path=\"/signup\">\n                    <SignUp />\n                </Route>\n                <Route path=\"/login\">\n                    <SignIn />\n                </Route>\n                <Route path=\"/chat\">\n                    <Chat />\n                </Route>\n                <Route path=\"/\">\n                    <Forgot />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","import { AuthenType } from \"../../constants\";\n\nconst initialState = {\n    token: \"\",\n    err: \"\",\n    image : \"http://simpleicon.com/wp-content/uploads/user1.png\",\n};\n\nexport default function AuthenReducer(state = initialState, action) {\n    switch (action.type) {\n\n        case AuthenType.LOGIN_REQUEST:\n            console.log('da an nut login')\n            return state;\n\n        case AuthenType.LOGIN_ADMIN:\n            return state;\n\n        case AuthenType.LOGIN_ERROR:\n\n            return { ...state, errorlogin: action.payload };\n\n        case AuthenType.LOGIN_SUCCSESS:\n            return state;\n\n        case AuthenType.SET_TOKEN:\n            return { ...state, token: action.payload }\n\n        case AuthenType.LOGIN_FACEBOOK:\n            return { ...state, name :  action.payload.name, image: action.payload.image }\n        \n        case AuthenType.LOGIN_LOCAL:\n                return { ...state, name : action.payload}\n\n        default:\n            return state;\n    }\n}","\nimport { HomeType } from '../../constants/index';\n\nconst initialState = {\n    isloading: true\n};\n\nexport default function productReducer(state = initialState, action) {\n    switch (action.type) {\n\n        case HomeType.DataProduct:\n          \n            return { ...state, Product: action.payload.data };\n\n        case HomeType.DataProductError:\n            console.log('Error: ', action.payload)\n            return state;\n\n        case HomeType.TEST_SEND_REQUEST:\n            console.log('test product call api')\n            return state;\n\n        case HomeType.SHOW_LOADING_ACTION:\n            return { ...state, isloading: true }\n\n        case HomeType.HIDE_LOADING_ACTION:\n            return { ...state, isloading: false }\n            \n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport AuthenReducer from \"./authenReducer\";\nimport productReducer from './productReducers';\nconst rootReducer = combineReducers({\n    AuthenReducer,\n    productReducer\n  });\nexport default rootReducer;\n  ","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware  from 'redux-saga';\nimport rootReducer from '../reducers/index';\nimport rootSaga from '../saga/rootsaga';\nexport const sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport rootSaga  from './redux/saga/rootsaga';\nimport RouterApp from './router';\nimport store, { sagaMiddleware } from './redux/store/configstore';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <RouterApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nsagaMiddleware.run(rootSaga)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}